// Code generated by go-mir. DO NOT EDIT.

package {{ .PkgName }}

import (
    "net/http"

    "github.com/go-chi/chi"
)

{{if notEmptyStr .Comment }}// {{.Comment}}{{end}}
type {{.TypeName}} interface {
{{if notEmptyStr .Chain }}    // Chain provide middlewares for chi
    {{.Chain}}() chi.Middlewares
{{end}}
{{range .Fields}}{{if notEmptyStr .Comment }}    // {{.Comment}}
    {{.MethodName}}(http.ResponseWriter, *http.Request){{else}}    {{.MethodName}}(http.ResponseWriter, *http.Request){{end}}
{{end}}
}

// Register{{.TypeName}}Servant register {{.TypeName}} servant to chi
func Register{{.TypeName}}Servant(r chi.Router, s {{.TypeName}}) {
{{if notEmptyStr .Group }}    router := chi.NewRouter()
    r.Mount("{{.Group}}", router){{else}}    router := r{{end}}
{{if notEmptyStr .Chain }}
    // use chain for router
    middlewares := s.{{.Chain}}()
    router.Use(middlewares...)
{{end}}
    // register routes info to router
{{range .Fields}}{{if notHttpAny .HttpMethod }}    router.MethodFunc("{{.HttpMethod}}", "{{.Path}}", s.{{.MethodName}}){{else}}    router.Head("{{.Path}}", s.{{.MethodName}})
    router.Get("{{.Path}}", s.{{.MethodName}})
    router.Post("{{.Path}}", s.{{.MethodName}})
    router.Put("{{.Path}}", s.{{.MethodName}})
    router.Delete("{{.Path}}", s.{{.MethodName}})
    router.Patch("{{.Path}}", s.{{.MethodName}})
    router.Options("{{.Path}}", s.{{.MethodName}})
    router.Connect("{{.Path}}", s.{{.MethodName}})
    router.Trace("{{.Path}}", s.{{.MethodName}}){{end}}
{{end}}}
