// Code generated by go-mir. DO NOT EDIT.

package v2

import (
	"net/http"

	chi "github.com/go-chi/chi"
)

type Site interface {
	Index(http.ResponseWriter, *http.Request)
	Articles(http.ResponseWriter, *http.Request)
	Category(http.ResponseWriter, *http.Request)

    mustEmbedUnimplementedSiteServant()
}

// RegisterSiteServant register Site servant to chi
func RegisterSiteServant(r chi.Router, s Site) {
	router := chi.NewRouter()
	r.Mount("/v2", router)

	// register routes info to router
	router.MethodFunc("GET", "/index/", s.Index)
	router.MethodFunc("GET", "/articles/{category}/{id:[0-9]+}", s.Articles)
	router.MethodFunc("GET", "/category/", s.Category)
}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct {
}

func (UnimplementedSiteServant) Index(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Index not implemented"))
}

func (UnimplementedSiteServant) Articles(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Articles not implemented"))
}

func (UnimplementedSiteServant) Category(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Category not implemented"))
}

func (UnimplementedSiteServant) mustEmbedUnimplementedSiteServant() {}
