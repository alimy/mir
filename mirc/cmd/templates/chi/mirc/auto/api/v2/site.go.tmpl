// Code generated by go-mir. DO NOT EDIT.

package v2

import (
	"net/http"

	chi "github.com/go-chi/chi"
)

type Site interface {
	Index(http.ResponseWriter, *http.Request)
	Articles(http.ResponseWriter, *http.Request)
	Category(http.ResponseWriter, *http.Request)
	Login(http.ResponseWriter, *http.Request)
	Logout(http.ResponseWriter, *http.Request)
	Assets(http.ResponseWriter, *http.Request)
	Others(http.ResponseWriter, *http.Request)
	Logs(http.ResponseWriter, *http.Request)
	Status(http.ResponseWriter, *http.Request)
	Admin(http.ResponseWriter, *http.Request)
	Dashboard(http.ResponseWriter, *http.Request)
	HomePage(http.ResponseWriter, *http.Request)

	mustEmbedUnimplementedSiteServant()
}

// RegisterSiteServant register Site servant to chi
func RegisterSiteServant(r chi.Router, s Site) {
	router := chi.NewRouter()
	r.Mount("/v2", router)

	// register routes info to router
	router.MethodFunc("GET", "/index/", s.Index)
	router.MethodFunc("GET", "/articles/{category}/{id:[0-9]+}", s.Articles)
	router.MethodFunc("GET", "/category/", s.Category)
	router.MethodFunc("POST", "/login", s.Login)
	router.MethodFunc("POST", "/logout", s.Logout)
	router.MethodFunc("HEAD", "/assets", s.Assets)
	router.MethodFunc("GET", "/assets", s.Assets)

	router.Head("/others", s.Others)
	router.Get("/others", s.Others)
	router.Post("/others", s.Others)
	router.Put("/others", s.Others)
	router.Delete("/others", s.Others)
	router.Patch("/others", s.Others)
	router.Options("/others", s.Others)
	router.Connect("/others", s.Others)
	router.Trace("/others", s.Others)
	router.Head("/logs", s.Logs)
	router.Get("/logs", s.Logs)
	router.Post("/logs", s.Logs)
	router.Put("/logs", s.Logs)
	router.Delete("/logs", s.Logs)
	router.Patch("/logs", s.Logs)
	router.Options("/logs", s.Logs)
	router.Connect("/logs", s.Logs)
	router.Trace("/logs", s.Logs)
	router.MethodFunc("GET", "/Status", s.Status)
	router.MethodFunc("POST", "/Status", s.Status)
	router.MethodFunc("HEAD", "/Status", s.Status)

	router.MethodFunc("GET", "/admin", s.Admin)
	router.MethodFunc("GET", "/dashboard", s.Dashboard)
	router.MethodFunc("GET", "/home", s.HomePage)
}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct {
}

func (UnimplementedSiteServant) Index(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Index not implemented"))
}

func (UnimplementedSiteServant) Articles(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Articles not implemented"))
}

func (UnimplementedSiteServant) Category(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Category not implemented"))
}

func (UnimplementedSiteServant) Login(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Login not implemented"))
}

func (UnimplementedSiteServant) Logout(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Logout not implemented"))
}

func (UnimplementedSiteServant) Assets(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Assets not implemented"))
}

func (UnimplementedSiteServant) Others(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Others not implemented"))
}

func (UnimplementedSiteServant) Logs(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Logs not implemented"))
}

func (UnimplementedSiteServant) Status(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Status not implemented"))
}

func (UnimplementedSiteServant) Admin(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Admin not implemented"))
}

func (UnimplementedSiteServant) Dashboard(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method Dashboard not implemented"))
}

func (UnimplementedSiteServant) HomePage(rw http.ResponseWriter, r *http.Request) {
	rw.WriteHeader(http.StatusNotImplemented)
	rw.Write([]byte("method HomePage not implemented"))
}

func (UnimplementedSiteServant) mustEmbedUnimplementedSiteServant() {}
