// Code generated by go-mir. DO NOT EDIT.

package api

import (
	"net/http"

	"github.com/gofiber/fiber/v2/middleware/logger"

	fiber "github.com/gofiber/fiber/v2"
)

type Site interface {
	// Chain provide handlers chain for fiber
	Chain() []interface{}

	Index(c *fiber.Ctx) error
	Articles(c *fiber.Ctx) error

    mustEmbedUnimplementedSiteServant()
}

// RegisterSiteServant register Site servant to fiber
func RegisterSiteServant(app *fiber.App, s Site) {
	router := app
	// use chain for router
	middlewares := s.Chain()
	router.Use(middlewares...)

	// register routes info to router
	router.Get("/index/", s.Index)
	router.Get("/articles/:category/", s.Articles)
}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct {
}

func (UnimplementedSiteServant) Chain() []interface{} {
	return []interface{}{logger.New()}
}

func (UnimplementedSiteServant) Index(c *fiber.Ctx) error {
	c.Status(http.StatusNotImplemented)
	c.Write([]byte("method Index not implemented"))
	return nil
}

func (UnimplementedSiteServant) Articles(c *fiber.Ctx) error {
	c.Status(http.StatusNotImplemented)
	c.Write([]byte("method Articles not implemented"))
	return nil
}

func (UnimplementedSiteServant) mustEmbedUnimplementedSiteServant() {}
