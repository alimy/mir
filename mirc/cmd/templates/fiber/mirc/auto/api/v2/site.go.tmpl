// Code generated by go-mir. DO NOT EDIT.

package v2

import (
	"net/http"

	fiber "github.com/gofiber/fiber"
)

type Site interface {
	Index(c *fiber.Ctx)
	Articles(c *fiber.Ctx)
	Category(c *fiber.Ctx)
}

// RegisterSiteServant register Site servant to fiber
func RegisterSiteServant(app *fiber.App, s Site) {
	router := app.Group("v2")

	// register routes info to router
	router.Get("/index/", s.Index)
	router.Get("/articles/:category?", s.Articles)
	router.Get("/category/", s.Category)
}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct {
}

func (*UnimplementedSiteServant) Index(c *fiber.Ctx) {
	c.Status(http.StatusNotImplemented)
	c.Write([]byte("method Index not implemented"))
}

func (*UnimplementedSiteServant) Articles(c *fiber.Ctx) {
	c.Status(http.StatusNotImplemented)
	c.Write([]byte("method Articles not implemented"))
}

func (*UnimplementedSiteServant) Category(c *fiber.Ctx) {
	c.Status(http.StatusNotImplemented)
	c.Write([]byte("method Category not implemented"))
}
