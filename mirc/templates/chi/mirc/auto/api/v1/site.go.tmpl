// Code generated by go-mir. DO NOT EDIT.
// versions:
// - mir v3.1.1

package v1

import (
	"net/http"

	"github.com/alimy/mir/v3"
	"github.com/go-chi/chi/v5"
)

type Site interface {
	// Chain provide middlewares for chi
	Chain() chi.Middlewares

	Articles() mir.Error
	Index() mir.Error

	mustEmbedUnimplementedSiteServant()
}

type SiteRender interface {
	RenderArticles(http.ResponseWriter, mir.Error)
	RenderIndex(http.ResponseWriter, mir.Error)

	mustEmbedUnimplementedSiteRender()
}

// RegisterSiteServant register Site servant to chi
func RegisterSiteServant(e chi.Router, s Site, r SiteRender) {
	router := chi.NewRouter()
	e.Mount("/v1", router)

	// use chain for router
	middlewares := s.Chain()
	router.Use(middlewares...)

	// register routes info to router
	{
		h := func(rw http.ResponseWriter, hr *http.Request) {
			select {
			case <-hr.Context().Done():
				return
			default:
			}

			r.RenderArticles(rw, s.Articles())
		}
		router.MethodFunc("POST", "/articles/:category/", h)
		router.MethodFunc("GET", "/articles/:category/", h)
		router.MethodFunc("HEAD", "/articles/:category/", h)
	}

	router.MethodFunc("GET", "/index/", func(rw http.ResponseWriter, hr *http.Request) {
		select {
		case <-hr.Context().Done():
			return
		default:
		}

		r.RenderIndex(rw, s.Index())
	})

}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct {
}

func (UnimplementedSiteServant) Chain() chi.Middlewares {
	return nil
}

func (UnimplementedSiteServant) Articles() mir.Error {
	return mir.Errorln(http.StatusNotImplemented, http.StatusText(http.StatusNotImplemented))
}

func (UnimplementedSiteServant) Index() mir.Error {
	return mir.Errorln(http.StatusNotImplemented, http.StatusText(http.StatusNotImplemented))
}

func (UnimplementedSiteServant) mustEmbedUnimplementedSiteServant() {}

// UnimplementedSiteRender can be embedded to have forward compatible implementations.
type UnimplementedSiteRender struct {
	RenderAny func(http.ResponseWriter, any, mir.Error)
}

func (r *UnimplementedSiteRender) RenderArticles(w http.ResponseWriter, err mir.Error) {
	r.RenderAny(w, nil, err)
}

func (r *UnimplementedSiteRender) RenderIndex(w http.ResponseWriter, err mir.Error) {
	r.RenderAny(w, nil, err)
}

func (r *UnimplementedSiteRender) mustEmbedUnimplementedSiteRender() {}
