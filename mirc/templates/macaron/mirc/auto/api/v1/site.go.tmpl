// Code generated by go-mir. DO NOT EDIT.
// versions:
// - mir 5.2

package v1

import (
	"net/http"

	"github.com/alimy/mir/v5"
	"gopkg.in/macaron.v1"
)

type _binding_ interface {
	Bind(*macaron.Context) error
}

type _render_ interface {
	Render(*macaron.Context)
}

type _default_ interface {
	Bind(*macaron.Context, any) error
	Render(*macaron.Context, any, error)
}

type Site interface {
	_default_

	// Chain provide handlers chain for macaron
	Chain() []macaron.Handler

	MultiAttachments(*macaron.Context)
	ManyResources(*macaron.Context)
	AnyStaticks(*macaron.Context)
	Statics(*macaron.Context)
	FileUpload(*macaron.Context)
	ImageUpload(*macaron.Context)
	Articles() error
	Index() error

	mustEmbedUnimplementedSiteServant()
}

// RegisterSiteServant register Site servant to macaron
func RegisterSiteServant(m *macaron.Macaron, s Site) {
	// use chain for router
	middlewares := s.Chain()
	m.Group("/v1", func() {
		{
			h := s.MultiAttachments
			m.Handle("GET", "/attachments/:name/", []macaron.Handler{h})
			m.Handle("HEAD", "/attachments/:name/", []macaron.Handler{h})
			m.Handle("OPTIONS", "/attachments/:name/", []macaron.Handler{h})
		}
		{
			h := s.ManyResources
			m.Handle("GET", "/resources/:name/", []macaron.Handler{h})
			m.Handle("HEAD", "/resources/:name/", []macaron.Handler{h})
			m.Handle("OPTIONS", "/resources/:name/", []macaron.Handler{h})
		}
		m.Any("/anystaticks/:name/", s.AnyStaticks)

		m.Handle("GET", "/statics/:name/", []macaron.Handler{s.Statics})

		m.Handle("POST", "/upload/file/:name/", []macaron.Handler{s.FileUpload})

		m.Handle("POST", "/upload/image/:name/", []macaron.Handler{s.ImageUpload})

		{
			h := func(c *macaron.Context) {

				s.Render(c, nil, s.Articles())
			}
			m.Handle("GET", "/articles/:category/", []macaron.Handler{h})
			m.Handle("HEAD", "/articles/:category/", []macaron.Handler{h})
			m.Handle("POST", "/articles/:category/", []macaron.Handler{h})
		}
		m.Handle("GET", "/index/", []macaron.Handler{func(c *macaron.Context) {

			s.Render(c, nil, s.Index())
		}})

	}, middlewares...)
}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct{}

func (UnimplementedSiteServant) Chain() []macaron.Handler {
	return nil
}

func (UnimplementedSiteServant) MultiAttachments(c *macaron.Context) {
	c.Resp.WriteHeader(http.StatusNotImplemented)
	c.Resp.Write([]byte("method not implemented"))
}

func (UnimplementedSiteServant) ManyResources(c *macaron.Context) {
	c.Resp.WriteHeader(http.StatusNotImplemented)
	c.Resp.Write([]byte("method not implemented"))
}

func (UnimplementedSiteServant) AnyStaticks(c *macaron.Context) {
	c.Resp.WriteHeader(http.StatusNotImplemented)
	c.Resp.Write([]byte("method not implemented"))
}

func (UnimplementedSiteServant) Statics(c *macaron.Context) {
	c.Resp.WriteHeader(http.StatusNotImplemented)
	c.Resp.Write([]byte("method not implemented"))
}

func (UnimplementedSiteServant) FileUpload(c *macaron.Context) {
	c.Resp.WriteHeader(http.StatusNotImplemented)
	c.Resp.Write([]byte("method not implemented"))
}

func (UnimplementedSiteServant) ImageUpload(c *macaron.Context) {
	c.Resp.WriteHeader(http.StatusNotImplemented)
	c.Resp.Write([]byte("method not implemented"))
}

func (UnimplementedSiteServant) Articles() error {
	return mir.Errorln(http.StatusNotImplemented, http.StatusText(http.StatusNotImplemented))
}

func (UnimplementedSiteServant) Index() error {
	return mir.Errorln(http.StatusNotImplemented, http.StatusText(http.StatusNotImplemented))
}

func (UnimplementedSiteServant) mustEmbedUnimplementedSiteServant() {}
