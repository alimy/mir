// Code generated by go-mir. DO NOT EDIT.
// versions:
// - mir v3.1.1

package v1

import (
	"net/http"

	"github.com/alimy/mir/v3"
	"gopkg.in/macaron.v1"
)

type Site interface {
	// Chain provide handlers chain for macaron
	Chain() []macaron.Handler

	Articles() mir.Error
	Index() mir.Error

	mustEmbedUnimplementedSiteServant()
}

type SiteRender interface {
	RenderArticles(*macaron.Context, mir.Error)
	RenderIndex(*macaron.Context, mir.Error)

	mustEmbedUnimplementedSiteRender()
}

// RegisterSiteServant register Site servant to macaron
func RegisterSiteServant(m *macaron.Macaron, s Site, r SiteRender) {
	// use chain for router
	middlewares := s.Chain()
	m.Group("v1", func() {
		{
			h := func(c *macaron.Context) {
				r.RenderArticles(c, s.Articles())
			}
			m.Handle("POST", "/articles/:category/", []macaron.Handler{h})
			m.Handle("GET", "/articles/:category/", []macaron.Handler{h})
			m.Handle("HEAD", "/articles/:category/", []macaron.Handler{h})
		}
		m.Handle("GET", "/index/", []macaron.Handler{func(c *macaron.Context) {
			r.RenderIndex(c, s.Index())
		}})

	}, middlewares...)
}

// UnimplementedSiteServant can be embedded to have forward compatible implementations.
type UnimplementedSiteServant struct {
}

func (UnimplementedSiteServant) Chain() []macaron.Handler {
	return nil
}

func (UnimplementedSiteServant) Articles() mir.Error {
	return mir.Errorln(http.StatusNotImplemented, http.StatusText(http.StatusNotImplemented))
}

func (UnimplementedSiteServant) Index() mir.Error {
	return mir.Errorln(http.StatusNotImplemented, http.StatusText(http.StatusNotImplemented))
}

func (UnimplementedSiteServant) mustEmbedUnimplementedSiteServant() {}

// UnimplementedSiteRender can be embedded to have forward compatible implementations.
type UnimplementedSiteRender struct {
	RenderAny func(*macaron.Context, any, mir.Error)
}

func (r *UnimplementedSiteRender) RenderArticles(c *macaron.Context, err mir.Error) {
	r.RenderAny(c, nil, err)
}

func (r *UnimplementedSiteRender) RenderIndex(c *macaron.Context, err mir.Error) {
	r.RenderAny(c, nil, err)
}

func (r *UnimplementedSiteRender) mustEmbedUnimplementedSiteRender() {}
